Polycarp has built his own web service. Being a modern web service it includes login feature. And that always implies password security problems.

Polycarp decided to store the hash of the password, generated by the following algorithm:

take the password pp, consisting of lowercase Latin letters, and shuffle the letters randomly in it to obtain p'p 
′(p'p can still be equal to pp);
generate two random strings, consisting of lowercase Latin letters, s_1s 
1
​
  and s_2s 
2
​
  (any of these strings can be empty);
the resulting hash h = s_1 + p' + s_2h=s 
1
​
 +p 
′
 +s 
2
​
 , where addition is string concatenation.
For example, let the password p =p= "abacaba". Then p'p 'can be equal to "aabcaab". Random strings s1 =s1= "zyx" and s2 =s2= "kjh". Then h =h= "zyxaabcaabkjh".

Note that no letters could be deleted or added to pp to obtain p'p , only the order could be changed.

Now Polycarp asks you to help him to implement the password check module. Given the password pp and the hash hh, check that hh can be the hash for the password pp.

Your program should answer tt independent test cases.

input
The first line contains one integer tt (1 \le t \le 1001≤t≤100) — the number of test cases.

The first line of each test case contains a non-empty string pp, consisting of lowercase Latin letters. The length of pp does not exceed 100100.

The second line of each test case contains a non-empty string hh, consisting of lowercase Latin letters. The length of hh does not exceed 100100.

output
For each test case print the answer to it — "YES" if the given hash hh could be obtained from the given password pp or "NO" otherwise.

sample 1
5
abacaba
zyxaabcaabkjh
onetwothree
threetwoone
one
zzonneyy
one
none
twenty
ten

YES
YES
NO
YES
NO

